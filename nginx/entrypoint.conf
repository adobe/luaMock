

lua_package_path '/usr/local/openresty/nginx/lua/?.lua;scripts/?.lua;/usr/local/lib/lua/?.lua;/opt/zbstudio/lualibs/?/?.lua;/opt/zbstudio/lualibs/?.lua;;';
lua_package_cpath '/opt/zbstudio/bin/linux/x64/clibs/?.so;/usr/local/openresty/nginx/lua/?.so;;';

init_worker_by_lua_file /usr/local/openresty/nginx/lua/worker_init.lua;


server_names_hash_bucket_size 1024;

# Sendfile copies data between one FD and other from within the kernel.
# More efficient than read() + write(), since the requires transferring data to and from the user space.
sendfile        on;

# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
# instead of using partial frames. This is useful for prepending headers before calling sendfile,
# or for throughput optimization.
tcp_nopush     on;

# Caches information about open FDs, freqently accessed files.
open_file_cache max=200000 inactive=20s;
open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;


#define the limit request zone for default locations
limit_req_zone $http_x_forwarded_for zone=free_ip_def:10m rate=10r/s;
client_body_temp_path /var/tmp/client_body_temp 1 2;
proxy_temp_path /var/tmp/proxy_temp;
keepalive_timeout  65;
# allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
reset_timedout_connection on;

default_type application/octet-stream;

variables_hash_max_size 2048;
proxy_headers_hash_max_size 2048;
#gzip on;