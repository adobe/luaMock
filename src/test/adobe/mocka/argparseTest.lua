---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by trifan.
--- DateTime: 02/11/2018 09:42
---
local argparse = require("mocka.argparse")

test('read -t key correctly', function()
    local key, value, i = argparse.read_key({"-t", "./gigi/out.lua"}, 1)
    assertEquals(key, 't')
    assertEquals(value, './gigi/out.lua')
end)

test('read --test key correctly', function()
    local key, value, i = argparse.read_key({"--test", "./gigi/out.lua"}, 1)
    assertEquals(key, 'test')
    assertEquals(value, './gigi/out.lua')
end)

test('read multiple same keys correctly', function()
    local key, value, i = argparse.read_key({"-t", "./gigi/out.lua", "-t", "./gigi/in.lua"}, 1)
    assertEquals(key, 't')
    assertEquals(value, './gigi/out.lua')
    -- read the next one
    key, value, i = argparse.read_key({"-t", "./gigi/out.lua", "-t", "./gigi/in.lua"}, i)
    assertEquals(key, 't')
    assertEquals(value, './gigi/in.lua')
end)

test('split by =', function()
    local key, value, i = argparse.read_key({"-t=./gigi/out.lua", "-t", "./gigi/in.lua"}, 1)
    assertEquals(key, 't')
    assertEquals(value, './gigi/out.lua')
    key, value, i = argparse.read_key({"-t=./gigi/out.lua", "-t", "./gigi/in.lua"}, i)
    assertEquals(key, 't')
    assertEquals(value, './gigi/in.lua')
end)

test('test no args', function()
    local key, value, i = argparse.read_key({"./gigi/in.lua"}, 1)
    assertNil(key)
    assertEquals(value, './gigi/in.lua')
end)

test('test normalize unix path', function()
    local norm = argparse.norm_path("./gigi/in.lua")
    assertEquals(norm, "gigi.in")
    norm = argparse.norm_path("test/gigi/in.lua")
    assertEquals(norm, "test.gigi.in")
    norm = argparse.norm_path("test/gigi/in.lua")
    assertEquals(norm, "test.gigi.in")
    norm = argparse.norm_path("/test2/gigi/in.lua")
    assertEquals(norm, "test2.gigi.in")
end)


